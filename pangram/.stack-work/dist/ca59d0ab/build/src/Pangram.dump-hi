
==================== FINAL INTERFACE ====================
2017-04-17 15:53:57.4022967 UTC

interface pangram-0.0.0-2EqWrVMydFs9qgNXS3ED5A:Pangram 8002
  interface hash: d262f2fe65e5bd96c3e689c35bb275cf
  ABI hash: cd2e322de82b1d49d88612c82bdd06b3
  export-list hash: 8a62c5a45c4dcc5bfdb0bcb1915337ff
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6afe13224aedeef930039c5dc659fa04
  sig of: Nothing
  used TH splices: False
  where
exports:
  Pangram.isPangram
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Char c49b58282af11503cc838e1052cf6b83
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Unicode 7b64ed854a326c2c5bb224f237ed4a0b
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
2147e4813d713c5e7e84092f1474be01
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Pangram.$trModule2
                   Pangram.$trModule1) -}
2c52e101b666575c7e492a0be9cbbe4b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Pangram"#) -}
7ecd8a14fc8ce339db97172224e82369
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "pangram-0.0.0-2EqWrVMydFs9qgNXS3ED5A"#) -}
74c715c5bca41f1240ca62e4e1c512fd
  isPangram :: GHC.Base.String -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [GHC.Types.Char]) ->
                 case ds of wild {
                   [] -> GHC.Types.False
                   : ipv ipv1
                   -> let {
                        lvl :: [GHC.Types.Char] = Pangram.isPangram_go wild
                      } in
                      letrec {
                        go :: [GHC.Types.Char] -> GHC.Types.Bool -> GHC.Types.Bool
                          {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
                        = \ (ds1 :: [GHC.Types.Char]) (eta :: GHC.Types.Bool) ->
                          case ds1 of wild1 {
                            [] -> eta
                            : y ys
                            -> case eta of wild2 {
                                 GHC.Types.False -> go ys GHC.Types.False
                                 GHC.Types.True
                                 -> go
                                      ys
                                      (GHC.List.elem
                                         @ GHC.Types.Char
                                         GHC.Classes.$fEqChar
                                         y
                                         lvl) } }
                      } in
                      go Pangram.isPangram1 GHC.Types.True }) -}
a98593e871093bf169ed1689f87fde5d
  isPangram1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Enum.eftChar 97# 122#) -}
35c839d80b3c84c9c99b3a9bdafc215b
  isPangram_go :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

