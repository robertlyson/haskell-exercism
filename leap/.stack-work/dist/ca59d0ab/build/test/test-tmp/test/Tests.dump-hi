
==================== FINAL INTERFACE ====================
2017-03-30 07:10:58.6920295 UTC

interface main@main:Main 8002
  interface hash: ec20eaf70d14b7c3a203591240137a02
  ABI hash: b53bc7989c0639e50a0715045bb6e600
  export-list hash: 880359c261c87d4c418b66c7be23cb8e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a3291f1376c6eb51cb22ed0ee4667256
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI
                      QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      Win32-2.3.1.1@Win32-2.3.1.1
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-Az560Cs0ObY6ZODYjxtBiR
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1@async-2.1.1-4n6HEMPJR2eJK0JpvCfuPK base-4.9.1.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hspec-2.4.1@hspec-2.4.1-9tgdpdTuP1CDQPLvlOgDkk
                      hspec-core-2.4.1@hspec-core-2.4.1-LJADAc37OY7GoJYIFjwgiV
                      hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd
                      integer-gmp-1.0.0.1 leap-0.0.0@leap-0.0.0-50cz5p9HCQwHCSvKjtV2XS
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      quickcheck-io-0.1.4@quickcheck-io-0.1.4-C5t3MfRsr5zrFam5nRAFy
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      setenv-0.1.1.3@setenv-0.1.1.3-7zMwpxt4EEAPEd1ZS7C4A
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      template-haskell-2.11.1.0
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         quickcheck-io-0.1.4@quickcheck-io-0.1.4-C5t3MfRsr5zrFam5nRAFy:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         hspec-core-2.4.1@hspec-core-2.4.1-LJADAc37OY7GoJYIFjwgiV:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.OldList c9282ee91951bdcbd918d2960562c007
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Real b88ae4a48c079652623073a5bbf5c9b0
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hspec-2.4.1@hspec-2.4.1-9tgdpdTuP1CDQPLvlOgDkk:Test.Hspec 950a9f661f4ee9bf2cf5ccd2e3530eb3
import  -/  hspec-2.4.1@hspec-2.4.1-9tgdpdTuP1CDQPLvlOgDkk:Test.Hspec.Runner e2edce24c729606110df492f77c39b52
import  -/  hspec-core-2.4.1@hspec-core-2.4.1-LJADAc37OY7GoJYIFjwgiV:Test.Hspec.Core.Options 6689c77a2ddc083f1f8720af6b49e4f7
import  -/  hspec-core-2.4.1@hspec-core-2.4.1-LJADAc37OY7GoJYIFjwgiV:Test.Hspec.Core.Runner 4b2ec7d72232c0775386ffc471037825
import  -/  hspec-core-2.4.1@hspec-core-2.4.1-LJADAc37OY7GoJYIFjwgiV:Test.Hspec.Core.Spec bf3465cef60eaa763574e537829d2032
import  -/  hspec-core-2.4.1@hspec-core-2.4.1-LJADAc37OY7GoJYIFjwgiV:Test.Hspec.Core.Spec.Monad d268e6d4bffc202590224f00dd459bce
import  -/  hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd:Test.Hspec.Expectations 3a84a1cb640da0a9a923fc2bfa92c798
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 5e60b761569ee353529e98a36b72df11
import  -/  leap-0.0.0@leap-0.0.0-50cz5p9HCQwHCSvKjtV2XS:LeapYear 1fa3931ca0476d0f444181f30965921e
8e216c2206cb8f7be813d7cecb9e50d3
  $tc'Case :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2009119047447439236##
                   4000366137966008070##
                   Main.$trModule
                   Main.$tc'Case1) -}
e1f62309fd3518446321a2aa8fd14d0f
  $tc'Case1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Case"#) -}
7a8c19ae5f4b23c19adbbf43e87cde07
  $tcCase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9590744086667149182##
                   6435574634662536949##
                   Main.$trModule
                   Main.$tcCase1) -}
df5f1a54bdbf4a66c08422298b09a82f
  $tcCase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Case"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
4b8f48cfe88f788304404b1a2297f910
  $wf1 ::
    GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.SpecTree
              (Test.Hspec.Core.Example.Arg
                 Test.Hspec.Expectations.Expectation)]) #)
  {- Arity: 4, Strictness: <L,1*U><L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Types.Bool)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# w,
                    (GHC.Tuple.(),
                     GHC.Types.:
                       @ (Test.Hspec.Core.Tree.SpecTree
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                       (Test.Hspec.Core.Tree.Leaf
                          @ (Test.Hspec.Core.Example.ActionWith
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          @ (Test.Hspec.Core.Tree.Item
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (Test.Hspec.Core.Tree.Item
                             @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                             (case GHC.Show.$w$cshowsPrec1
                                     0#
                                     ww1
                                     (GHC.Types.[] @ GHC.Types.Char) of ww3 { (#,#) ww4 ww5 ->
                              case GHC.Base.++
                                     @ GHC.Types.Char
                                     (GHC.Types.: @ GHC.Types.Char ww4 ww5)
                                     (GHC.Types.:
                                        @ GHC.Types.Char
                                        Main.main46
                                        (GHC.Base.++
                                           @ GHC.Types.Char
                                           Main.main45
                                           (GHC.Types.:
                                              @ GHC.Types.Char
                                              Main.main46
                                              (GHC.Base.++
                                                 @ GHC.Types.Char
                                                 ww
                                                 (GHC.Types.[] @ GHC.Types.Char))))) of wild {
                                [] -> Test.Hspec.Core.Tree.specItem1 : ds1 ds2 -> wild } })
                             Main.main35
                             GHC.Types.False
                             (Test.Hspec.Core.Example.safeEvaluateExample1
                                @ Test.Hspec.Expectations.Expectation
                                Test.Hspec.Core.Example.$fExampleIO1
                                  `cast`
                                (Trans
                                     (<Test.Hspec.Expectations.Expectation>_R
                                      ->_R <Test.Hspec.Core.Example.Params>_R
                                      ->_R ((Trans
                                                 (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0]
                                                           <()>_N))
                                                 (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                             ->_R <GHC.Types.IO ()>_R)
                                            ->_R <GHC.Types.IO ()>_R)
                                      ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                      ->_R Sym (GHC.Types.N:IO[0]
                                                    <Test.Hspec.Core.Example.Result>_R))
                                     (Sym (Test.Hspec.Core.Example.N:Example[0]
                                               <Test.Hspec.Expectations.Expectation>_N)))
                                (Main.main23
                                   (GHC.Types.[] @ GHC.Types.Char)
                                   ww2
                                   (LeapYear.isLeapYear ww1)))
                               `cast`
                             (<Test.Hspec.Core.Example.Params>_R
                              ->_R <Test.Hspec.Core.Example.ActionWith
                                      (Test.Hspec.Core.Example.Arg
                                         Test.Hspec.Expectations.Expectation)
                                    -> GHC.Types.IO ()>_R
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               GHC.Exception.SomeException
                                               Test.Hspec.Core.Example.Result>_R))))
                       (GHC.Types.[]
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation)))) #)) -}
5676a82c4dd12ac8e778960c1644c908
  data Case
    = Case {description :: GHC.Base.String,
            input :: GHC.Integer.Type.Integer,
            expected :: GHC.Types.Bool}
c08000a90c3cb1d0e5ff2ed20852322b
  description :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds1 }) -}
2a4d8a9c918814b1a31e1d04a40b4f19
  expected :: Main.Case -> GHC.Types.Bool
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds3 }) -}
3282d5dcab99968e2624ce5df25dcd3f
  input :: Main.Case -> GHC.Integer.Type.Integer
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds2 }) -}
ac2cdbce6ca1106c93df17bc91dabdc1
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
f03bb0e546e2f3e166f53d35d2d3ed21
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main47
                        Main.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
f9e79a79798a54eaa5535c836cd71546
  main10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "leap y2k"#) -}
3a89faf8427796128bf79841e5953884
  main11 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2400) -}
0013819067f6b659b81e6e2019921aaa
  main12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "leap twenty fourth century"#) -}
35bff1fb0b4800dfe0c675934d3f4be8
  main13 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1800) -}
63489d86cfba52929a4eaf737dcf5db5
  main14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "standard eighteenth century"#) -}
f654546b726d858f1379ca409d235cae
  main15 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1900) -}
af3d97e1f913a14d53fffb8c1c1c4e71
  main16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "standard nineteenth century"#) -}
c2efeaf07aa169bd4302255b4e205af9
  main17 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1998) -}
a2c8b411d3c0ae1ca9e417e69f170f91
  main18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "standard even year"#) -}
acc62f09c73f05c3ae5f6d2609ceb120
  main19 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1997) -}
97db7cf3e001c84ba7c2e308c2db8cca
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case (Main.$wf1 Main.main22 Main.main21 GHC.Types.True eta)
                        `cast`
                      ((#,#)
                         <'GHC.Types.VoidRep>_R
                         <'GHC.Types.PtrRepLifted>_R
                         <GHC.Prim.State# GHC.Prim.RealWorld>_R
                         ((,)
                            <()>_R
                            ([(Test.Hspec.Core.Tree.Tree
                                 (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                  ->_R <GHC.Types.IO ()>_R)
                                 (Test.Hspec.Core.Tree.Item
                                    (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R of ds { (#,#) ipv ipv1 ->
                 case (Main.$wf1 Main.main20 Main.main19 GHC.Types.False ipv)
                        `cast`
                      ((#,#)
                         <'GHC.Types.VoidRep>_R
                         <'GHC.Types.PtrRepLifted>_R
                         <GHC.Prim.State# GHC.Prim.RealWorld>_R
                         ((,)
                            <()>_R
                            ([(Test.Hspec.Core.Tree.Tree
                                 (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                  ->_R <GHC.Types.IO ()>_R)
                                 (Test.Hspec.Core.Tree.Item
                                    (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R of ds1 { (#,#) ipv2 ipv3 ->
                 case (Main.$wf1 Main.main18 Main.main17 GHC.Types.False ipv2)
                        `cast`
                      ((#,#)
                         <'GHC.Types.VoidRep>_R
                         <'GHC.Types.PtrRepLifted>_R
                         <GHC.Prim.State# GHC.Prim.RealWorld>_R
                         ((,)
                            <()>_R
                            ([(Test.Hspec.Core.Tree.Tree
                                 (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                  ->_R <GHC.Types.IO ()>_R)
                                 (Test.Hspec.Core.Tree.Item
                                    (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R of ds2 { (#,#) ipv4 ipv5 ->
                 case (Main.$wf1 Main.main16 Main.main15 GHC.Types.False ipv4)
                        `cast`
                      ((#,#)
                         <'GHC.Types.VoidRep>_R
                         <'GHC.Types.PtrRepLifted>_R
                         <GHC.Prim.State# GHC.Prim.RealWorld>_R
                         ((,)
                            <()>_R
                            ([(Test.Hspec.Core.Tree.Tree
                                 (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                  ->_R <GHC.Types.IO ()>_R)
                                 (Test.Hspec.Core.Tree.Item
                                    (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R of ds3 { (#,#) ipv6 ipv7 ->
                 case (Main.$wf1 Main.main14 Main.main13 GHC.Types.False ipv6)
                        `cast`
                      ((#,#)
                         <'GHC.Types.VoidRep>_R
                         <'GHC.Types.PtrRepLifted>_R
                         <GHC.Prim.State# GHC.Prim.RealWorld>_R
                         ((,)
                            <()>_R
                            ([(Test.Hspec.Core.Tree.Tree
                                 (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                  ->_R <GHC.Types.IO ()>_R)
                                 (Test.Hspec.Core.Tree.Item
                                    (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R of ds4 { (#,#) ipv8 ipv9 ->
                 case (Main.$wf1 Main.main12 Main.main11 GHC.Types.True ipv8)
                        `cast`
                      ((#,#)
                         <'GHC.Types.VoidRep>_R
                         <'GHC.Types.PtrRepLifted>_R
                         <GHC.Prim.State# GHC.Prim.RealWorld>_R
                         ((,)
                            <()>_R
                            ([(Test.Hspec.Core.Tree.Tree
                                 (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                  ->_R <GHC.Types.IO ()>_R)
                                 (Test.Hspec.Core.Tree.Item
                                    (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R of ds5 { (#,#) ipv10 ipv11 ->
                 case (Main.$wf1 Main.main10 Main.main9 GHC.Types.True ipv10)
                        `cast`
                      ((#,#)
                         <'GHC.Types.VoidRep>_R
                         <'GHC.Types.PtrRepLifted>_R
                         <GHC.Prim.State# GHC.Prim.RealWorld>_R
                         ((,)
                            <()>_R
                            ([(Test.Hspec.Core.Tree.Tree
                                 (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                  ->_R <GHC.Types.IO ()>_R)
                                 (Test.Hspec.Core.Tree.Item
                                    (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R of ds6 { (#,#) ipv12 ipv13 ->
                 (# ipv12,
                    (GHC.Tuple.(),
                     GHC.Types.:
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (Test.Hspec.Core.Tree.Node
                          @ (Test.Hspec.Core.Example.ActionWith ())
                          @ (Test.Hspec.Core.Tree.Item ())
                          Main.main6
                          (GHC.Types.:
                             @ (Test.Hspec.Core.Tree.Tree
                                  (Test.Hspec.Core.Example.ActionWith ())
                                  (Test.Hspec.Core.Tree.Item ()))
                             (Test.Hspec.Core.Tree.Node
                                @ (Test.Hspec.Core.Example.ActionWith ())
                                @ (Test.Hspec.Core.Tree.Item ())
                                Main.main3
                                (case ipv1 of wild { (,) a1 w1 ->
                                 GHC.Base.++
                                   @ (Test.Hspec.Core.Tree.Tree
                                        (Test.Hspec.Core.Example.ActionWith ())
                                        (Test.Hspec.Core.Tree.Item ()))
                                   w1
                                   (case ipv3 of wild1 { (,) a2 w2 ->
                                    GHC.Base.++
                                      @ (Test.Hspec.Core.Tree.Tree
                                           (Test.Hspec.Core.Example.ActionWith ())
                                           (Test.Hspec.Core.Tree.Item ()))
                                      w2
                                      (case ipv5 of wild2 { (,) a3 w3 ->
                                       GHC.Base.++
                                         @ (Test.Hspec.Core.Tree.Tree
                                              (Test.Hspec.Core.Example.ActionWith ())
                                              (Test.Hspec.Core.Tree.Item ()))
                                         w3
                                         (case ipv7 of wild3 { (,) a4 w4 ->
                                          GHC.Base.++
                                            @ (Test.Hspec.Core.Tree.Tree
                                                 (Test.Hspec.Core.Example.ActionWith ())
                                                 (Test.Hspec.Core.Tree.Item ()))
                                            w4
                                            (case ipv9 of wild4 { (,) a5 w5 ->
                                             GHC.Base.++
                                               @ (Test.Hspec.Core.Tree.Tree
                                                    (Test.Hspec.Core.Example.ActionWith ())
                                                    (Test.Hspec.Core.Tree.Item ()))
                                               w5
                                               (case ipv11 of wild5 { (,) a6 w6 ->
                                                GHC.Base.++
                                                  @ (Test.Hspec.Core.Tree.Tree
                                                       (Test.Hspec.Core.Example.ActionWith ())
                                                       (Test.Hspec.Core.Tree.Item ()))
                                                  w6
                                                  (case ipv13 of wild6 { (,) a7 w7 ->
                                                   w7 }) }) }) }) }) }) }))
                             (GHC.Types.[]
                                @ (Test.Hspec.Core.Tree.Tree
                                     (Test.Hspec.Core.Example.ActionWith ())
                                     (Test.Hspec.Core.Tree.Item ())))))
                       (GHC.Types.[]
                          @ (Test.Hspec.Core.Tree.Tree
                               (Test.Hspec.Core.Example.ActionWith ())
                               (Test.Hspec.Core.Tree.Item ())))) #) } } } } } } }) -}
3233e85a480a1de1de62e924f4464906
  main20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "standard and odd year"#) -}
778ea72ec8cdab2dc90c9eef967abdfd
  main21 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1996) -}
0183c40ac42a9889123adbdea6cc09aa
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "leap year"#) -}
1c76575a7c69d9e1cec5d868fe72336b
  main23 ::
    GHC.Base.String
    -> GHC.Types.Bool -> GHC.Types.Bool -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Types.Bool
                   Main.main24
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEqBool
                   GHC.Show.$fShowBool) -}
402e6a69bd3314cb86c7250903bf7179
  main24 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Main.main25) -}
8d43ae15a073fdcde403afc4aaef13a6
  main25 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Main.main26) -}
041c7225bd5790f8cfc69b738315e69d
  main26 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main34
                   Main.main27
                   GHC.Stack.Types.EmptyCallStack) -}
8332fd05b208997b3ff75d0f4185da1c
  main27 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main33
                   Main.main32
                   Main.main31
                   Main.main30
                   Main.main29
                   Main.main30
                   Main.main28) -}
3fd3a98a6f321771e0059bf13b8c0ee8
  main28 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 74#) -}
6652c2b6ec06627e56d65c315d99798c
  main29 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 23#) -}
7609ee4a783fb321ae4139151f29e9d2
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main5
                   Main.main4) -}
180446d7dff67eb941235982ba61bd8a
  main30 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
4c31eb46b446d3dd8d7f7606cd0a24e8
  main31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "test\\Tests.hs"#) -}
1dc75cd0f7f1661e9ce3ab5cdfe158bc
  main32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
6180745dbbad0e5a1e3a46e18432ed09
  main33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "main"#) -}
2e7aa09eecd71868b5f8bba8be6ac27c
  main34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
a98a8e9c199b350ec794d9e224922a30
  main35 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Main.main36
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (GHC.Stack.Types.srcLocFile loc)
                           (GHC.Stack.Types.srcLocStartLine loc)
                           (GHC.Stack.Types.srcLocStartCol loc)
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
c1c6c4d61c06ae53acda747bf654c503
  main36 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Main.main37) -}
a8d4ab3182f2afef724df0074fa454e3
  main37 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Main.main38) -}
2abf79db5cc19c11b12b8aea496cfbd0
  main38 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Main.main39) -}
0447e6e33d4b8f327796bdbf8b8bd219
  main39 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Main.main40) -}
1c1f7ead2c29fab2fae638ce1a5c8857
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sLeapYear"#) -}
0fc1ad33c59cb392047527bff2da0ffa
  main40 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main44
                   Main.main41
                   GHC.Stack.Types.EmptyCallStack) -}
44aa2a36e420a7b933e8ac8a9d5a1da4
  main41 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main33
                   Main.main32
                   Main.main31
                   Main.main43
                   Main.main30
                   Main.main43
                   Main.main42) -}
5eb8b15d9c488d50fc6082829c8d6a1a
  main42 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 45#) -}
bb087ac81c34e1e97f3b44531907c689
  main43 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 18#) -}
2cf327b8334b650cd7e58c7866a88244
  main44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
460e41ce96ad365ad0cff3c9bddd5ded
  main45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-"#) -}
bff7baa5ff29694ccfed4cc13cac01a0
  main46 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# ' '#) -}
55d65137849461045b5b45df60643d3f
  main47 :: Test.Hspec.Core.Options.Config
  {- Unfolding: (Test.Hspec.Core.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Options.ColorAuto
                   GHC.Types.False
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
e66d1203eb54f6474a7bca618ffcd655
  main48 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
e2c691066c1c93975531de0ef11dbc22
  main5 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'i'#) -}
c1f63b1865f005f2e761b8698fad4b36
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main8
                   Main.main7) -}
f1429d91280498a3e4bc417459ba4cf6
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "eap"#) -}
5e6f5beebf3000e3a13e498cdb04d503
  main8 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'l'#) -}
44b3ad4963aaef28855f691960e4388c
  main9 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2000) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

